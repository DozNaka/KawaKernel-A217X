/*
 * linux/drivers/video/fbdev/exynos/panel/td4150/td4150_a21s_dv_panel.h
 *
 * Header file for TD4150 Dimming Driver
 *
 * Copyright (c) 2016 Samsung Electronics
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef __TD4150_A21S_DV_PANEL_H__
#define __TD4150_A21S_DV_PANEL_H__
#include "../panel_drv.h"
#include "td4150.h"

#include "td4150_a21s_panel_dimming.h"
#include "td4150_a21s_panel_i2c.h"

#include "td4150_a21s_resol.h"

#undef __pn_name__
#define __pn_name__	a21s

#undef __PN_NAME__
#define __PN_NAME__	A21S

static struct seqinfo a21s_dv_seqtbl[MAX_PANEL_SEQ];


/* ===================================================================================== */
/* ============================= [TD4150 READ INFO TABLE] ============================= */
/* ===================================================================================== */
/* <READINFO TABLE> IS DEPENDENT ON LDI. IF YOU NEED, DEFINE PANEL's RESOURCE TABLE */


/* ===================================================================================== */
/* ============================= [TD4150 RESOURCE TABLE] ============================== */
/* ===================================================================================== */
/* <RESOURCE TABLE> IS DEPENDENT ON LDI. IF YOU NEED, DEFINE PANEL's RESOURCE TABLE */


/* ===================================================================================== */
/* ============================== [TD4150 MAPPING TABLE] ============================== */
/* ===================================================================================== */

static u8 a21s_dv_brt_table[TD4150_TOTAL_NR_LUMINANCE][1] = {
	{0},
	{2}, {2}, {3}, {3}, {4}, {5}, {5}, {6}, {6}, {7}, /* 1: 2 */
	{8}, {8}, {9}, {9}, {10}, {11}, {11}, {12}, {13}, {13},
	{14}, {14}, {15}, {16}, {16}, {17}, {17}, {18}, {19}, {19},
	{20}, {21}, {21}, {22}, {22}, {23}, {24}, {24}, {25}, {25},
	{26}, {27}, {27}, {28}, {29}, {29}, {30}, {30}, {31}, {32},
	{32}, {33}, {33}, {34}, {35}, {35}, {36}, {37}, {37}, {38},
	{38}, {39}, {40}, {40}, {41}, {41}, {42}, {43}, {43}, {44},
	{44}, {45}, {46}, {46}, {47}, {48}, {48}, {49}, {49}, {50},
	{51}, {51}, {52}, {52}, {53}, {54}, {54}, {55}, {56}, {56},
	{57}, {57}, {58}, {59}, {59}, {60}, {60}, {61}, {62}, {62},
	{63}, {64}, {64}, {65}, {65}, {66}, {67}, {67}, {68}, {68},
	{69}, {70}, {70}, {71}, {72}, {72}, {73}, {73}, {74}, {75},
	{75}, {76}, {76}, {77}, {78}, {78}, {79}, {80}, {81}, {82},  /* 128: 80 */
	{83}, {84}, {85}, {86}, {87}, {88}, {89}, {90}, {91}, {92},
	{93}, {94}, {95}, {96}, {97}, {98}, {99}, {100}, {101}, {102},
	{103}, {104}, {105}, {106}, {107}, {108}, {109}, {110}, {111}, {112},
	{113}, {114}, {115}, {116}, {117}, {118}, {119}, {120}, {121}, {122},
	{124}, {125}, {126}, {127}, {128}, {129}, {130}, {131}, {132}, {133},
	{134}, {135}, {136}, {137}, {138}, {139}, {140}, {141}, {142}, {143},
	{144}, {145}, {146}, {147}, {148}, {149}, {150}, {151}, {152}, {153},
	{154}, {155}, {156}, {157}, {158}, {159}, {160}, {161}, {162}, {163},
	{164}, {165}, {167}, {168}, {169}, {170}, {171}, {172}, {173}, {174},
	{175}, {176}, {177}, {178}, {179}, {180}, {181}, {182}, {183}, {184},
	{185}, {186}, {187}, {188}, {189}, {190}, {191}, {192}, {193}, {194},
	{195}, {196}, {197}, {198}, {199}, {200}, {201}, {202}, {203}, {204},
	{205}, {206}, {207}, {208}, {210}, {210}, {210}, {210}, {210}, {210},  /* 255: 210 */
	{210}, {210}, {210}, {210}, {210}, {210}, {210}, {210}, {210}, {210},
	{210}, {210}, {210}, {210}, {210}, {210}, {210}, {210}, {210}, {210},
	{210}, {210}, {210}, {210}, {210}, {210}, {210}, {210}, {210}, {210},
	{210}, {210}, {210}, {210}, {210}, {210}, {210}, {210}, {210}, {210},
	{210}, {210}, {210}, {210}, {210}, {255},
};


static struct maptbl a21s_dv_maptbl[MAX_MAPTBL] = {
	[BRT_MAPTBL] = DEFINE_2D_MAPTBL(a21s_dv_brt_table, init_brightness_table, getidx_brt_table, copy_common_maptbl),
};

/* ===================================================================================== */
/* ============================== [TD4150 COMMAND TABLE] ============================== */
/* ===================================================================================== */
static u8 A21S_DV_SLEEP_OUT[] = { 0x11 };
static u8 A21S_DV_SLEEP_IN[] = { 0x10 };
static u8 A21S_DV_DISPLAY_OFF[] = { 0x28 };
static u8 A21S_DV_DISPLAY_ON[] = { 0x29 };

static u8 A21S_DV_BRIGHTNESS[] = {
	0x51,
	0xFF,
};

static u8 A21S_DV_BRIGHTNESS_MODE[] = {
	0x53,
	0x24,
};

static u8 A21S_DV_TD4150_B0_OPEN[] = {
	0xB0, 0x04,
};

static u8 A21S_DV_TD4150_B6[] = {
	0xB6,
	0x30, 0x64, 0x00, 0x06, 0xC3, 0x03,
};

static u8 A21S_DV_TD4150_B7[] = {
	0xB7,
	0x11, 0x00, 0x00, 0x00,
};

static u8 A21S_DV_TD4150_B8[] = {
	0xB8,
	0x00, 0x78, 0x64, 0x10, 0x64, 0xB4,
};

static u8 A21S_DV_TD4150_B9[] = {
	0xB9,
	0x00, 0x78, 0x64, 0x10, 0x64, 0xB4,
};

static u8 A21S_DV_TD4150_BA[] = {
	0xBA,
	0x00, 0x78, 0x64, 0x10, 0x64, 0xB4,
};

static u8 A21S_DV_TD4150_BB[] = {
	0xBB,
	0x00, 0xB4, 0xA0,
};

static u8 A21S_DV_TD4150_BC[] = {
	0xBC,
	0x00, 0xB4, 0xA0,
};

static u8 A21S_DV_TD4150_BD[] = {
	0xBD,
	0x00, 0xB4, 0xA0,
};

static u8 A21S_DV_TD4150_BE[] = {
	0xBE,
	0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00,
};

static u8 A21S_DV_TD4150_C0[] = {
	0xC0,
	0x00, 0x7F, 0x10, 0x06, 0x40, 0x00, 0x0B, 0x06, 0xB3, 0x00,
	0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00,
};

static u8 A21S_DV_TD4150_C1[] = {
	0xC1,
	0x30, 0x11, 0x50, 0xFA, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00,
	0x00, 0x00, 0x40, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00,
};

static u8 A21S_DV_TD4150_C2[] = {
	0xC2,
	0x00, 0x20, 0x4E, 0x22, 0x05, 0x00, 0x05, 0x12, 0x00, 0x04,
	0x20, 0x0E, 0x22, 0x06, 0x00, 0x05, 0x11, 0x00, 0x03, 0x20,
	0x7C, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x4E,
	0x01, 0x05, 0x06, 0x54, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x32, 0x08, 0x08, 0x04, 0x05, 0x05,
	0x00, 0x96, 0x50, 0x03, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00,
	0x00, 0x11, 0x00, 0x96, 0x50, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x72, 0x08, 0x08, 0x04,
	0x05, 0x05, 0x00, 0x96, 0x50, 0x03, 0x00, 0x10, 0x08, 0x00,
	0x00, 0x00, 0x00, 0x11, 0x00, 0x96, 0x50, 0x08, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
	0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
};

static u8 A21S_DV_TD4150_C3[] = {
	0xC3,
	0x00, 0x40, 0x01, 0x01, 0x65, 0x90, 0x00, 0x00, 0x00, 0x00,
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x23, 0x00, 0x07, 0x10, 0x3B, 0x01, 0x65, 0x10,
	0x0A, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00,
};

static u8 A21S_DV_TD4150_C4[] = {
	0xC4,
	0x00, 0x57, 0x0B, 0x00, 0x03, 0x04, 0x61, 0x55, 0x1A, 0x19,
	0x18, 0x17, 0x16, 0x15, 0x14, 0x13, 0x02, 0x02, 0x02, 0x02,
	0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
	0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x55, 0x61,
	0x08, 0x07, 0x00, 0x0B, 0x57, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x80, 0x7F, 0x00, 0xE0, 0x1F, 0x00, 0x00, 0x00, 0x00,
	0xE0, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F,
	0x3F, 0x3F, 0x3F, 0x55, 0x55, 0x55, 0xD5, 0xFF, 0xFF, 0xFF,
	0x57, 0x55, 0x55, 0x55,
};

static u8 A21S_DV_TD4150_C5[] = {
	0xC5,
	0x08, 0x00, 0x00, 0x00, 0x00,
};

static u8 A21S_DV_TD4150_C6[] = {
	0xC6,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x04, 0x00,
	0x40, 0x3C, 0x00, 0x00, 0x04, 0x00, 0x40, 0x3C, 0x0F, 0x05,
	0x01, 0x19, 0x01, 0x35, 0xFF, 0x8F, 0x06, 0x05, 0x01, 0xC0,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x20, 0x20, 0x00, 0x00, 0x00, 0xC0, 0x11,
	0x1F, 0x00, 0x00, 0x10, 0x10, 0x00, 0x01, 0xF0, 0x01, 0x00,
	0x50, 0x00, 0x33, 0x03,
};

static u8 A21S_DV_TD4150_C7[] = {
	0xC7,
	0x00, 0x00, 0x00, 0x52, 0x00, 0x60, 0x00, 0x65, 0x00, 0x79,
	0x00, 0x86, 0x00, 0x9C, 0x00, 0x93, 0x00, 0xA9, 0x00, 0x81,
	0x00, 0xF2, 0x00, 0x97, 0x00, 0xF8, 0x00, 0xE1, 0x01, 0x53,
	0x01, 0x83, 0x02, 0x17, 0x02, 0x96, 0x02, 0xA0, 0x00, 0x00,
	0x00, 0x52, 0x00, 0x60, 0x00, 0x65, 0x00, 0x79, 0x00, 0x86,
	0x00, 0x9C, 0x00, 0xBB, 0x00, 0xE7, 0x00, 0xB7, 0x01, 0x0C,
	0x01, 0x05, 0x01, 0x3C, 0x00, 0xED, 0x01, 0x73, 0x01, 0x83,
	0x02, 0x17, 0x02, 0x96, 0x02, 0xA0,
};

static u8 A21S_DV_TD4150_C8[] = {
	0xC8,
	0x40, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00,
	0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00,
	0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xFC,
};

static u8 A21S_DV_TD4150_C9[] = {
	0xC9,
	0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x24, 0x8B,
	0x4D, 0x8B, 0x4D, 0x8B, 0x4D,
};

static u8 A21S_DV_TD4150_CA[] = {
	0xCA,
	0x1C, 0xFC, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
};


static u8 A21S_DV_TD4150_CB[] = {
	0xCB,
	0x12, 0xD0, 0x09, 0xC1, 0xB9, 0x65, 0x30, 0xA8, 0x74, 0x21,
	0xB8, 0x75, 0x21, 0xA9, 0x64, 0x30, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x40, 0x70, 0x00, 0x24, 0x00, 0x00, 0x00, 0xFF,
};

static u8 A21S_DV_TD4150_CE[] = {
	0xCE,
	0x5D, 0x40, 0x43, 0x49, 0x55, 0x62, 0x71, 0x82, 0x94, 0xA8,
	0xB9, 0xCB, 0xDB, 0xE9, 0xF5, 0xFC, 0xFF, 0x04, 0x00, 0x04,
	0x04, 0x00, 0x00, 0x00,
};

static u8 A21S_DV_TD4150_CF[] = {
	0xCF,
	0x00,
};

static u8 A21S_DV_TD4150_D0[] = {
	0xD0,
	0xC2, 0x33, 0x81, 0x66, 0x09, 0x90, 0x00, 0xC0, 0x92, 0x80,
	0x12, 0x48, 0x06, 0x7E, 0x09, 0x08, 0xD0, 0x00,
};

static u8 A21S_DV_TD4150_D1[] = {
	0xD1,
	0xD4, 0xD4, 0x1B, 0x33, 0x33, 0x17, 0x07, 0x3B, 0x55, 0x74,
	0x55, 0x74, 0x00, 0x33, 0x77, 0x07, 0x33, 0x30, 0x06, 0x72,
	0x13, 0x13, 0x00,
};

static u8 A21S_DV_TD4150_D2[] = {
	0xD2,
	0x00, 0x00, 0x00,
};

static u8 A21S_DV_TD4150_D3[] = {
	0xD3,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
	0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7,
	0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF,
	0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF,
	0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7,
	0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF,
	0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF,
	0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7,
	0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF,
	0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF,
	0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7,
	0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF,
	0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF,
	0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7,
	0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF,
	0xFF, 0xF7, 0xFF,
};

static u8 A21S_DV_TD4150_E5[] = {
	0xE5,
	0x03, 0x00, 0x00, 0x00,
 };

static u8 A21S_DV_TD4150_D6[] = {
	0xD6,
	0xC0,
};

static u8 A21S_DV_TD4150_D7[] = {
	0xD7,
	0x21, 0x00, 0x12, 0x12, 0x00, 0x70, 0x08, 0x58, 0x00, 0x70,
	0x08, 0x58, 0x00, 0x83, 0x80, 0x85, 0x85, 0x85, 0x87, 0x84,
	0x45, 0x86, 0x87, 0x80, 0x82, 0x80, 0x80, 0x83, 0x83, 0x88,
	0x84, 0x08, 0x0C, 0x0C, 0x0B, 0x0A, 0x0A, 0x0A, 0x07, 0x07,
	0x06, 0x06, 0x0C, 0x08,
};

static u8 A21S_DV_TD4150_D9[] = {
	0xD9,
	0x00, 0x02, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

static u8 A21S_DV_TD4150_DD[] = {
	0xDD,
	0x30, 0x06, 0x23, 0x65,
};

static u8 A21S_DV_TD4150_DE[] = {
	0xDE,
	0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x10,
	0x00, 0x00, 0x00, 0x00,
};

static u8 A21S_DV_TD4150_E3[] = {
	0xE3,
	0xFF,
};

static u8 A21S_DV_TD4150_E9[] = {
	0xE9,
	0x80, 0x11, 0x17, 0x00, 0x00, 0x00, 0x5C, 0x00, 0xFF, 0xBF,
	0x05, 0xFF, 0x9F, 0x04, 0xFF, 0x7F, 0x06, 0xFF, 0x3F, 0x05,
	0xFF, 0x9F, 0x04, 0xFF, 0xCF, 0x07, 0xFF, 0xE7, 0x07, 0xFF,
	0xF3, 0x07, 0xFF, 0xF9, 0x07, 0xCD, 0xFF, 0x07, 0xE4, 0xFF,
	0x07, 0xF3, 0xFF, 0x07, 0xE9, 0xFF, 0x07, 0xE4, 0xFC, 0x07,
	0x7F, 0xFE, 0x07, 0x3F, 0xFF, 0x07, 0x9F, 0xFF, 0x07, 0xDF,
	0xFF, 0x07, 0x0C,
};

static u8 A21S_DV_TD4150_EA[] = {
	0xEA,
	0x01, 0x0A, 0x14, 0x08, 0xE1, 0x0A, 0x20, 0xA2, 0x00, 0x00,
	0x00, 0x0A, 0x23, 0x00, 0x03, 0x01, 0x16, 0x01, 0x16, 0x01,
	0x16, 0x01, 0x28, 0x01, 0x28, 0x00, 0x70, 0x00, 0x00, 0x00,
	0x7F, 0x00, 0x34, 0x00,
};

static u8 A21S_DV_TD4150_EB[] = {
	0xEB,
	0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11,
};

static u8 A21S_DV_TD4150_EC[] = {
	0xEC,
	0x01, 0xC0, 0x00, 0x10, 0x9B, 0x0A, 0x20, 0xA2, 0x00, 0x00,
	0x00, 0x01, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00,
};

static u8 A21S_DV_TD4150_ED[] = {
	0xED,
	0x01, 0x02, 0x06, 0x07, 0x00, 0x00, 0x02, 0x01, 0x65, 0x80,
	0x01, 0x00, 0x08, 0x00, 0x80, 0x08, 0x00, 0x00, 0x00, 0x01,
	0x0F, 0x00, 0x01, 0x30, 0x01, 0x01, 0x0F, 0x00, 0x00, 0x10,
	0x81, 0x10, 0x01,
};

static u8 A21S_DV_TD4150_EE[] = {
	0xEE,
	0x05, 0x40, 0x05, 0x00, 0xC0, 0x0F, 0x00, 0xC0, 0x0F, 0x00,
	0xC0, 0x0F, 0x00, 0xC0, 0x0F, 0x00, 0xC0, 0x0F, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xC0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xFF, 0x3F, 0x00, 0xC0, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03,
	0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00,
	0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x02,
};

static u8 A21S_DV_TD4150_B0_CLOSE[] = {
	0xB0, 0x03,
};

static DEFINE_STATIC_PACKET(a21s_dv_sleep_out, DSI_PKT_TYPE_WR, A21S_DV_SLEEP_OUT, 0);
static DEFINE_STATIC_PACKET(a21s_dv_sleep_in, DSI_PKT_TYPE_WR, A21S_DV_SLEEP_IN, 0);
static DEFINE_STATIC_PACKET(a21s_dv_display_on, DSI_PKT_TYPE_WR, A21S_DV_DISPLAY_ON, 0);
static DEFINE_STATIC_PACKET(a21s_dv_display_off, DSI_PKT_TYPE_WR, A21S_DV_DISPLAY_OFF, 0);
static DEFINE_STATIC_PACKET(a21s_dv_brightness_mode, DSI_PKT_TYPE_WR, A21S_DV_BRIGHTNESS_MODE, 0);

static DEFINE_PKTUI(a21s_dv_brightness, &a21s_dv_maptbl[BRT_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(a21s_dv_brightness, DSI_PKT_TYPE_WR, A21S_DV_BRIGHTNESS, 0);


static DEFINE_STATIC_PACKET(a21s_dv_td4150_b0_open, DSI_PKT_TYPE_WR, A21S_DV_TD4150_B0_OPEN, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_b6, DSI_PKT_TYPE_WR, A21S_DV_TD4150_B6, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_b7, DSI_PKT_TYPE_WR, A21S_DV_TD4150_B7, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_b8, DSI_PKT_TYPE_WR, A21S_DV_TD4150_B8, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_b9, DSI_PKT_TYPE_WR, A21S_DV_TD4150_B9, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_ba, DSI_PKT_TYPE_WR, A21S_DV_TD4150_BA, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_bb, DSI_PKT_TYPE_WR, A21S_DV_TD4150_BB, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_bc, DSI_PKT_TYPE_WR, A21S_DV_TD4150_BC, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_bd, DSI_PKT_TYPE_WR, A21S_DV_TD4150_BD, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_be, DSI_PKT_TYPE_WR, A21S_DV_TD4150_BE, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_c0, DSI_PKT_TYPE_WR, A21S_DV_TD4150_C0, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_c1, DSI_PKT_TYPE_WR, A21S_DV_TD4150_C1, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_c2, DSI_PKT_TYPE_WR, A21S_DV_TD4150_C2, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_c3, DSI_PKT_TYPE_WR, A21S_DV_TD4150_C3, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_c4, DSI_PKT_TYPE_WR, A21S_DV_TD4150_C4, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_c5, DSI_PKT_TYPE_WR, A21S_DV_TD4150_C5, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_c6, DSI_PKT_TYPE_WR, A21S_DV_TD4150_C6, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_c7, DSI_PKT_TYPE_WR, A21S_DV_TD4150_C7, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_c8, DSI_PKT_TYPE_WR, A21S_DV_TD4150_C8, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_c9, DSI_PKT_TYPE_WR, A21S_DV_TD4150_C9, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_ca, DSI_PKT_TYPE_WR, A21S_DV_TD4150_CA, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_cb, DSI_PKT_TYPE_WR, A21S_DV_TD4150_CB, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_ce, DSI_PKT_TYPE_WR, A21S_DV_TD4150_CE, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_cf, DSI_PKT_TYPE_WR, A21S_DV_TD4150_CF, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_d0, DSI_PKT_TYPE_WR, A21S_DV_TD4150_D0, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_d1, DSI_PKT_TYPE_WR, A21S_DV_TD4150_D1, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_d2, DSI_PKT_TYPE_WR, A21S_DV_TD4150_D2, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_d3, DSI_PKT_TYPE_WR, A21S_DV_TD4150_D3, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_e5, DSI_PKT_TYPE_WR, A21S_DV_TD4150_E5, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_d6, DSI_PKT_TYPE_WR, A21S_DV_TD4150_D6, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_d7, DSI_PKT_TYPE_WR, A21S_DV_TD4150_D7, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_d9, DSI_PKT_TYPE_WR, A21S_DV_TD4150_D9, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_dd, DSI_PKT_TYPE_WR, A21S_DV_TD4150_DD, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_de, DSI_PKT_TYPE_WR, A21S_DV_TD4150_DE, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_e3, DSI_PKT_TYPE_WR, A21S_DV_TD4150_E3, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_e9, DSI_PKT_TYPE_WR, A21S_DV_TD4150_E9, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_ea, DSI_PKT_TYPE_WR, A21S_DV_TD4150_EA, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_eb, DSI_PKT_TYPE_WR, A21S_DV_TD4150_EB, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_ec, DSI_PKT_TYPE_WR, A21S_DV_TD4150_EC, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_ed, DSI_PKT_TYPE_WR, A21S_DV_TD4150_ED, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_ee, DSI_PKT_TYPE_WR, A21S_DV_TD4150_EE, 0);
static DEFINE_STATIC_PACKET(a21s_dv_td4150_b0_close, DSI_PKT_TYPE_WR, A21S_DV_TD4150_B0_CLOSE, 0);

static DEFINE_PANEL_MDELAY(a21s_dv_wait_display_off, 1 * 17);	/* 1 frame */
static DEFINE_PANEL_MDELAY(a21s_dv_wait_sleep_in, 4 * 17);	/* 4 frame */
static DEFINE_PANEL_MDELAY(a21s_dv_wait_sleep_out, 4 * 17);	/* 4 frame */
static DEFINE_PANEL_MDELAY(a21s_dv_wait_blic_off, 1);


static void *a21s_dv_init_cmdtbl[] = {
	&td4150_restbl[RES_ID],
	&PKTINFO(a21s_dv_td4150_b0_open),
	&PKTINFO(a21s_dv_td4150_b6),
	&PKTINFO(a21s_dv_td4150_b7),
	&PKTINFO(a21s_dv_td4150_b8),
	&PKTINFO(a21s_dv_td4150_b9),
	&PKTINFO(a21s_dv_td4150_ba),
	&PKTINFO(a21s_dv_td4150_bb),
	&PKTINFO(a21s_dv_td4150_bc),
	&PKTINFO(a21s_dv_td4150_bd),
	&PKTINFO(a21s_dv_td4150_be),
	&PKTINFO(a21s_dv_td4150_c0),
	&PKTINFO(a21s_dv_td4150_c1),
	&PKTINFO(a21s_dv_td4150_c2),
	&PKTINFO(a21s_dv_td4150_c3),
	&PKTINFO(a21s_dv_td4150_c4),
	&PKTINFO(a21s_dv_td4150_c5),
	&PKTINFO(a21s_dv_td4150_c6),
	&PKTINFO(a21s_dv_td4150_c7),
	&PKTINFO(a21s_dv_td4150_c8),
	&PKTINFO(a21s_dv_td4150_c9),
	&PKTINFO(a21s_dv_td4150_ca),
	&PKTINFO(a21s_dv_td4150_cb),
	&PKTINFO(a21s_dv_td4150_ce),
	&PKTINFO(a21s_dv_td4150_cf),
	&PKTINFO(a21s_dv_td4150_d0),
	&PKTINFO(a21s_dv_td4150_d1),
	&PKTINFO(a21s_dv_td4150_d2),
	&PKTINFO(a21s_dv_td4150_d3),
	&PKTINFO(a21s_dv_td4150_e5),
	&PKTINFO(a21s_dv_td4150_d6),
	&PKTINFO(a21s_dv_td4150_d7),
	&PKTINFO(a21s_dv_td4150_d9),
	&PKTINFO(a21s_dv_td4150_dd),
	&PKTINFO(a21s_dv_td4150_de),
	&PKTINFO(a21s_dv_td4150_e3),
	&PKTINFO(a21s_dv_td4150_e9),
	&PKTINFO(a21s_dv_td4150_ea),
	&PKTINFO(a21s_dv_td4150_eb),
	&PKTINFO(a21s_dv_td4150_ec),
	&PKTINFO(a21s_dv_td4150_ed),
	&PKTINFO(a21s_dv_td4150_ee),
	&PKTINFO(a21s_dv_td4150_b0_close),
	&PKTINFO(a21s_dv_sleep_out),
};

static void *a21s_dv_res_init_cmdtbl[] = {
	&td4150_restbl[RES_ID],
};

static void *a21s_dv_set_bl_cmdtbl[] = {
	&PKTINFO(a21s_dv_brightness), //51h
};

static void *a21s_dv_display_on_cmdtbl[] = {
	&DLYINFO(a21s_dv_wait_sleep_out),
	&PKTINFO(a21s_dv_display_on),
	&PKTINFO(a21s_dv_brightness_mode),
};

static void *a21s_dv_display_off_cmdtbl[] = {
	&PKTINFO(a21s_dv_display_off),
	&DLYINFO(a21s_dv_wait_display_off),
};

static void *a21s_dv_exit_cmdtbl[] = {
	&PKTINFO(a21s_dv_sleep_in),
	&DLYINFO(a21s_dv_wait_sleep_in),
};

/* ===================================================================================== */
/* ================================= [EA8076 I2C TABLE] ===========+++================= */
/* ===================================================================================== */
static u8 TD4150_A21S_DV_I2C_INIT[] = {
	0x0C, 0x2C,
	0x0D, 0x26,
	0x0E, 0x26,
	0x09, 0xBE,
	0x02, 0x69,
	0x03, 0x0D,
	0x11, 0x75,
	0x04, 0x05,
	0x05, 0xCC,
	0x10, 0x67,
	0x08, 0x13,
};

static u8 TD4150_A21S_DV_I2C_EXIT_VSN[] = {
	0x09, 0xBC,
};

static u8 TD4150_A21S_DV_I2C_EXIT_VSP[] = {
	0x09, 0xB8,
};

static DEFINE_STATIC_PACKET(td4150_a21s_dv_i2c_init, I2C_PKT_TYPE_WR, TD4150_A21S_DV_I2C_INIT, 0);
static DEFINE_STATIC_PACKET(td4150_a21s_dv_i2c_exit_vsn, I2C_PKT_TYPE_WR, TD4150_A21S_DV_I2C_EXIT_VSN, 0);
static DEFINE_STATIC_PACKET(td4150_a21s_dv_i2c_exit_vsp, I2C_PKT_TYPE_WR, TD4150_A21S_DV_I2C_EXIT_VSP, 0);
static DEFINE_STATIC_PACKET(td4150_a21s_dv_i2c_dump, I2C_PKT_TYPE_RD, TD4150_A21S_DV_I2C_INIT, 0);

static void *td4150_a21s_dv_init_cmdtbl[] = {
	&PKTINFO(td4150_a21s_dv_i2c_init),
};

static void *td4150_a21s_dv_exit_cmdtbl[] = {
	&PKTINFO(td4150_a21s_dv_i2c_exit_vsn),
	&DLYINFO(a21s_dv_wait_blic_off),
	&PKTINFO(td4150_a21s_dv_i2c_exit_vsp),
};

static void *td4150_a21s_dv_dump_cmdtbl[] = {
	&PKTINFO(td4150_a21s_dv_i2c_dump),
};


static struct seqinfo a21s_dv_seqtbl[MAX_PANEL_SEQ] = {
	[PANEL_INIT_SEQ] = SEQINFO_INIT("init-seq", a21s_dv_init_cmdtbl),
	[PANEL_RES_INIT_SEQ] = SEQINFO_INIT("resource-init-seq", a21s_dv_res_init_cmdtbl),
	[PANEL_SET_BL_SEQ] = SEQINFO_INIT("set-bl-seq", a21s_dv_set_bl_cmdtbl),
	[PANEL_DISPLAY_ON_SEQ] = SEQINFO_INIT("display-on-seq", a21s_dv_display_on_cmdtbl),
	[PANEL_DISPLAY_OFF_SEQ] = SEQINFO_INIT("display-off-seq", a21s_dv_display_off_cmdtbl),
	[PANEL_EXIT_SEQ] = SEQINFO_INIT("exit-seq", a21s_dv_exit_cmdtbl),
#ifdef CONFIG_SUPPORT_I2C
	[PANEL_I2C_INIT_SEQ] = SEQINFO_INIT("i2c-init-seq", td4150_a21s_dv_init_cmdtbl),
	[PANEL_I2C_EXIT_SEQ] = SEQINFO_INIT("i2c-exit-seq", td4150_a21s_dv_exit_cmdtbl),
	[PANEL_I2C_DUMP_SEQ] = SEQINFO_INIT("i2c-dump-seq", td4150_a21s_dv_dump_cmdtbl),
#endif

};

struct common_panel_info td4150_a21s_dv_panel_info = {
	.ldi_name = "td4150",
	.name = "td4150_a21s_dv",
	.model = "BOE_6_55_inch",
	.vendor = "BOE",
	.id = 0x8A6220,
	.rev = 0,
	.ddi_props = {
		.gpara = 0,
		.err_fg_recovery = false,
		.init_seq_by_lpdt = 1,
	},
	.mres = {
		.nr_resol = ARRAY_SIZE(td4150_a21s_resol),
		.resol = td4150_a21s_resol,
	},
	.maptbl = a21s_dv_maptbl,
	.nr_maptbl = ARRAY_SIZE(a21s_dv_maptbl),
	.seqtbl = a21s_dv_seqtbl,
	.nr_seqtbl = ARRAY_SIZE(a21s_dv_seqtbl),
	.rditbl = td4150_rditbl,
	.nr_rditbl = ARRAY_SIZE(td4150_rditbl),
	.restbl = td4150_restbl,
	.nr_restbl = ARRAY_SIZE(td4150_restbl),
	.dumpinfo = NULL,
	.nr_dumpinfo = 0,
	.panel_dim_info = {
		&td4150_a21s_panel_dimming_info,
	},
	.i2c_data = &td4150_a21s_i2c_data,
};

static int __init td4150_a21s_dv_panel_init(void)
{
	register_common_panel(&td4150_a21s_dv_panel_info);

	return 0;
}
arch_initcall(td4150_a21s_dv_panel_init)
#endif /* __TD4150_A21S_DV_PANEL_H__ */
