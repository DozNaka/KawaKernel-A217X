/*
 * Copyright (C) 2019 Samsung Electronics
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 */

#ifndef __S2MU106_MUIC_H__
#define __S2MU106_MUIC_H__

#include <linux/muic/common/muic.h>
#include <linux/muic/common/muic_interface.h>
#include <linux/muic/slsi/s2mu106/s2mu106-muic-hv.h>
#include <linux/pm_wakeup.h>

#define MUIC_DEV_NAME	"muic-s2mu106"

enum s2mu106_muic_registers {
	S2MU106_REG_AFC_INT = 	 0x0,
	S2MU106_REG_MUIC_INT1 =	 0x1,
	S2MU106_REG_MUIC_INT2 =	 0x2,
	S2MU106_REG_PM_VAL_UP1 =	 0x3,
	S2MU106_REG_PM_VAL_UP2 =	 0x4,
	S2MU106_REG_PM_INT1 = 	 0x5,
	S2MU106_REG_PM_INT2 = 	 0x6,
	S2MU106_REG_AFC_INT_MASK =	 0x8,
	S2MU106_REG_MUIC_INT1_MASK =	 0x9,
	S2MU106_REG_MUIC_INT2_MASK =	 0xa,
	S2MU106_REG_AFC_STATUS =	 0x10,
	S2MU106_REG_VAL1_VCHGIN =	 0x12,
	S2MU106_REG_VAL2_VCHGIN =	 0x13,
	S2MU106_REG_AFC_CTRL1 =	 0x2b,
	S2MU106_REG_AFC_CTRL2 =	 0x2c,
	S2MU106_REG_AFC_TX_BYTE =	 0x2d,
	S2MU106_REG_AFC_LOGIC_RDATA1 = 0x3e,
	S2MU106_REG_AFC_LOGIC_RDATA2 = 0x3f,
	S2MU106_REG_AFC_LOGIC_CTRL1 =  0x40,
	S2MU106_REG_AFC_LOGIC_CTRL2 =  0x41,
	S2MU106_REG_AFC_LOGIC_RDATA3 = 0x42,
	S2MU106_REG_QC30_DP_STEP =	 0x43,
	S2MU106_REG_QC30_DM_STEP =	 0x44,
	S2MU106_REG_AFC_MONITOR =	 0x45,
	S2MU106_REG_ADC_VALUE =	 0x46,
	S2MU106_REG_DEVICE_TYP1 =	 0x47,
	S2MU106_REG_DEVICE_TYP2 =	 0x48,
	S2MU106_REG_DEVICE_TYP3 =	 0x49,
	S2MU106_REG_RESET =		 0x4c,
	S2MU106_REG_CHG_TYP = 	 0x4d,
	S2MU106_REG_DEVICE_APPLE =	 0x4e,
	S2MU106_REG_BCD_RESCAN =	 0x4f,
	S2MU106_REG_TEST1 =		 0x50,
	S2MU106_REG_TEST2 =		 0x51,
	S2MU106_REG_TEST3 =		 0x52,
	S2MU106_REG_WATER_WARN_FLAG =  0x53,
	S2MU106_REG_REQ_BOX_CO1 =	 0x5F,
	S2MU106_REG_AFC_OTP0 =	 0x65,
	S2MU106_REG_AFC_OTP1 =	 0x66,
	S2MU106_REG_AFC_OTP2 =	 0x67,
	S2MU106_REG_AFC_OTP3 =	 0x68,
	S2MU106_REG_AFC_OTP4 =	 0x69,
	S2MU106_REG_AFC_OTP5 =	 0x6a,
	S2MU106_REG_AFC_OTP6 =	 0x6b,
	S2MU106_REG_MUIC_CTRL1 =	 0x6d,
	S2MU106_REG_TIMER_SET1 =	 0x6e,
	S2MU106_REG_TIMER_SET2 =	 0x6f,
	S2MU106_REG_MANUAL_SW_CTRL =	 0x70,
	S2MU106_REG_TIMER_SET3 =	 0x71,
	S2MU106_REG_MUIC_CTRL2 =	 0x72,
	S2MU106_REG_MUIC_CTRL3 =	 0x73,
	S2MU106_REG_CHARGER_DET_OTP =  0x74,
	S2MU106_REG_ADC_VREF_OTP =	 0x75,
	S2MU106_REG_ADCBIAS_OTP1 =	 0x76,
	S2MU106_REG_ADCBIAS_OTP2 =	 0x77,
	S2MU106_REG_ADCBIAS_OTP3 =	 0x78,
	S2MU106_REG_ADCBIAS_OTP4 =	 0x79,
	S2MU106_REG_LDOADC_VSETL =	 0x7a,
	S2MU106_REG_LDOADC_VSETH =	 0x7b,
	S2MU106_REG_LDOPCP_VSET_OTP =  0x7c,
	S2MU106_REG_MONITOR_SEL =	 0x7d,
	S2MU106_REG_RID_WATER_PROOF =  0x7e,
	S2MU106_REG_RID_DISCHARGE =	 0x7f,
	S2MU106_REG_MUIC_RSVD1 =	 0x80,
	S2MU106_REG_MUIC_RSVD2 =	 0x81,
	S2MU106_REG_MUIC_RSVD3 =	 0x82,
	S2MU106_REG_MUIC_RSVD4 =	 0x83,
	S2MU106_REG_MUIC_RSVD5 =	 0x84,
	S2MU106_REG_MUIC_RSVD6 =	 0x85,
	S2MU106_REG_MUIC_RSVD7 =	 0x86,
	S2MU106_REG_MUIC_RSVD8 =	 0x87,
};
#define ADC_CONVERSION_ERR_MASK		(0x1 << 7)

/* s2mu106 muic register read/write related information defines. */
/* S2MU106 Control register */
/* S2MU106 MUIC_INT1 register (0x01)*/
#define S2MU106_WAKE_UP_I_SHIFT			7
#define S2MU106_USB_KILLER_I_SHIFT		6
#define S2MU106_RID_CHG_I_SHIFT			5
#define S2MU106_LKR_I_SHIFT			4
#define S2MU106_LKP_I_SHIFT			3
#define S2MU106_KP_I_SHIFT			2
#define S2MU106_DETACH_I_SHIFT			1
#define S2MU106_ATTACH_I_SHIFT			0

#define S2MU106_WAKE_UP_I_MASK			(0x1 << S2MU106_WAKE_UP_I_SHIFT)
#define S2MU106_USB_KILLER_I_MASK		(0x1 << S2MU106_USB_KILLER_I_SHIFT)
#define S2MU106_RID_CHG_I_MASK			(0x1 << S2MU106_RID_CHG_I_SHIFT)
#define S2MU106_LKR_I_MASK			(0x1 << S2MU106_LKR_I_SHIFT)
#define S2MU106_LKP_I_MASK			(0x1 << S2MU106_LKP_I_SHIFT)
#define S2MU106_KP_I_MASK			(0x1 << S2MU106_KP_I_SHIFT)
#define S2MU106_DETACH_I_MASK			(0x1 << S2MU106_DETACH_I_SHIFT)
#define S2MU106_ATTACH_I_MASK			(0x1 << S2MU106_ATTACH_I_SHIFT)

/* S2MU106 MUIC_INT2 register (0x02)*/
#define S2MU106_VBUS_OFF_I_SHIFT		7
#define S2MU106_AV_CHARGE_I_SHIFT		6
#define S2MU106_MHDL_I_SHIFT			5
#define S2MU106_STUCKRCV_I_SHIFT		4
#define S2MU106_STUCK_I_SHIFT			3
#define S2MU106_ADCCHANGE_I_SHIFT		2
#define S2MU106_RSVD_ATTACH_I_SHIFT		1
#define S2MU106_VBUS_ON_I_SHIFT			0

#define S2MU106_VBUS_OFF_I_MASK			(0x1 << S2MU106_VBUS_OFF_I_SHIFT)
#define S2MU106_AV_CHARGE_I_MASK		(0x1 << S2MU106_AV_CHARGE_I_SHIFT)
#define S2MU106_MHDL_I_MASK			(0x1 << S2MU106_MHDL_I_SHIFT)
#define S2MU106_STUCKRCV_I_MASK			(0x1 << S2MU106_STUCKRCV_I_SHIFT)
#define S2MU106_STUCK_I_MASK			(0x1 << S2MU106_STUCK_I_SHIFT)
#define S2MU106_ADCCHANGE_I_MASK		(0x1 << S2MU106_ADCCHANGE_I_SHIFT)
#define S2MU106_RSVD_ATTACH_I_MASK 		(0x1 << S2MU106_RSVD_ATTACH_I_SHIFT)
#define S2MU106_VBUS_ON_I_MASK			(0x1 << S2MU106_VBUS_ON_I_SHIFT)

/* S2MU106 MUIC_INT1_MASK register (0x09)*/
#define S2MU106_WAKE_UP_Im_SHIFT		7
#define S2MU106_USB_KILLER_Im_SHIFT		6
#define S2MU106_RID_CHG_Im_SHIFT		5
#define S2MU106_LKR_Im_SHIFT			4
#define S2MU106_LKP_Im_SHIFT			3
#define S2MU106_KP_Im_SHIFT			2
#define S2MU106_DETACH_Im_SHIFT			1
#define S2MU106_ATTACH_Im_SHIFT			0

#define S2MU106_WAKE_UP_Im_MASK			(0x1 << S2MU106_WAKE_UP_Im_SHIFT)
#define S2MU106_USB_KILLER_Im_MASK		(0x1 << S2MU106_USB_KILLER_Im_SHIFT)
#define S2MU106_RID_CHG_Im_MASK			(0x1 << S2MU106_RID_CHG_Im_SHIFT)
#define S2MU106_LKR_Im_MASK			(0x1 << S2MU106_LKR_Im_SHIFT)
#define S2MU106_LKP_Im_MASK			(0x1 << S2MU106_LKP_Im_SHIFT)
#define S2MU106_KP_Im_MASK			(0x1 << S2MU106_KP_Im_SHIFT)
#define S2MU106_DETACH_Im_MASK			(0x1 << S2MU106_DETACH_Im_SHIFT)
#define S2MU106_ATTACH_Im_MASK			(0x1 << S2MU106_ATTACH_Im_SHIFT)

/* S2MU106 MUIC_INT2_MASK register (0x0A)*/
#define S2MU106_VBUS_OFF_Im_SHIFT		7
#define S2MU106_AV_CHARGE_Im_SHIFT		6
#define S2MU106_MHDL_Im_SHIFT			5
#define S2MU106_STUCKRCV_Im_SHIFT		4
#define S2MU106_STUCK_Im_SHIFT			3
#define S2MU106_ADCCHANGE_Im_SHIFT		2
#define S2MU106_RSVD_ATTACH_Im_SHIFT		1
#define S2MU106_VBUS_ON_Im_SHIFT		0

#define S2MU106_VBUS_OFF_Im_MASK		(0x1 << S2MU106_VBUS_OFF_Im_SHIFT)
#define S2MU106_AV_CHARGE_Im_MASK		(0x1 << S2MU106_AV_CHARGE_Im_SHIFT)
#define S2MU106_MHDL_Im_MASK			(0x1 << S2MU106_MHDL_Im_SHIFT)
#define S2MU106_STUCKRCV_Im_MASK		(0x1 << S2MU106_STUCKRCV_Im_SHIFT)
#define S2MU106_STUCK_Im_MASK			(0x1 << S2MU106_STUCK_Im_SHIFT)
#define S2MU106_ADCCHANGE_Im_MASK		(0x1 << S2MU106_ADCCHANGE_Im_SHIFT)
#define S2MU106_RSVD_ATTACH_Im_MASK 		(0x1 << S2MU106_RSVD_ATTACH_Im_SHIFT)
#define S2MU106_VBUS_ON_Im_MASK			(0x1 << S2MU106_VBUS_ON_Im_SHIFT)

/*
 * S2MU106 MUIC Interrupt Maksing for pdic
 * Use Attach, Detach, VBUS On, ADC Change, VBUS Off.
 */
#if IS_ENABLED(CONFIG_MUIC_S2MU106_FAST_DETECTION)
#define S2MU106_INT_MUIC_MASK1			(0xDC)
#else
#define S2MU106_INT_MUIC_MASK1			(0xFC)
#endif
#define S2MU106_INT_MUIC_MASK2			(0x7A)

#define S2MU106_INT_USBKILLER_MASK1		(0xBD)
#define S2MU106_ADC_MASK				(0x1f)

/* S2MU106 ADC_VALUE register (0x46)*/
#define S2MU106_ADCERR_SHIFT			7
#define S2MU106_ADCVAL_SHIFT			0

#define S2MU106_ADCERR_MASK			(0x1 << S2MU106_ADCERR_SHIFT)
#define S2MU106_ADCVAL_MASK			(MASK_5b << S2MU106_ADCVAL_SHIFT)

/* S2MU106 DEVICE_TYP1 register (0x47)*/
#define S2MU106_USBOTG_SHIFT			7
#define S2MU106_DCPCHG_SHIFT			6
#define S2MU106_CDPCHG_SHIFT			5
#define S2MU106_CARKIT_SHIFT			4
#define S2MU106_UART_SHIFT			3
#define S2MU106_USB_SHIFT			2
#define S2MU106_AUDIOTYP2_SHIFT			1
#define S2MU106_AUDIOTYP1_SHIFT			0

#define S2MU106_USBOTG_MASK			(0x1 << S2MU106_USBOTG_SHIFT)
#define S2MU106_DCPCHG_MASK			(0x1 << S2MU106_DCPCHG_SHIFT)
#define S2MU106_CDPCHG_MASK			(0x1 << S2MU106_CDPCHG_SHIFT)
#define S2MU106_CARKIT_MASK			(0x1 << S2MU106_CARKIT_SHIFT)
#define S2MU106_UART_MASK			(0x1 << S2MU106_UART_SHIFT)
#define S2MU106_USB_MASK			(0x1 << S2MU106_USB_SHIFT)
#define S2MU106_AUDIOTYP2_MASK			(0x1 << S2MU106_AUDIOTYP2_SHIFT)
#define S2MU106_AUDIOTYP1_MASK			(0x1 << S2MU106_AUDIOTYP1_SHIFT)

/* S2MU106 DEVICE_TYP2 register (0x48)*/
#define S2MU106_SDP_1P8S_SHIFT			7
#define S2MU106_AV_SHIFT			6
#define S2MU106_TTY_SHIFT			5
#define S2MU106_PPD_SHIFT			4
#define S2MU106_JIGUARTOFF_SHIFT		3
#define S2MU106_JIGUARTON_SHIFT			2
#define S2MU106_JIGUSBOFF_SHIFT			1
#define S2MU106_JIGUSBON_SHIFT			0

#define S2MU106_SDP_1P8S_MASK			(0x1 << S2MU106_SDP_1P8S_SHIFT)
#define S2MU106_AV_MASK				(0x1 << S2MU106_AV_SHIFT)
#define S2MU106_TTY_MASK			(0x1 << S2MU106_TTY_SHIFT)
#define S2MU106_PPD_MASK			(0x1 << S2MU106_PPD_SHIFT)
#define S2MU106_JIGUARTOFF_MASK			(0x1 << S2MU106_JIGUARTOFF_SHIFT)
#define S2MU106_JIGUARTON_MASK			(0x1 << S2MU106_JIGUARTON_SHIFT)
#define S2MU106_JIGUSBOFF_MASK			(0x1 << S2MU106_JIGUSBOFF_SHIFT)
#define S2MU106_JIGUSBON_MASK			(0x1 << S2MU106_JIGUSBON_SHIFT)

/* S2MU106 DEVICE_TYP3 register (0x49)*/
#define S2MU106_U200_CHG_SHIFT			7
#define S2MU106_USB_KILLER_SHIFT		6
#define S2MU106_AV_VBUS_SHIFT			4
#define S2MU106_CARKIT_TYPE_SHIFT		2
#define S2MU106_VBUS_R255_SHIFT			1
#define S2MU106_MHDL_SHIFT			0

#define S2MU106_U200_CHG_MASK			(0x1 << S2MU106_U200_CHG_SHIFT)
#define S2MU106_USB_KILLER_MASK			(0x1 << S2MU106_USB_KILLER_SHIFT)
#define S2MU106_AV_VBUS_MASK			(0x1 << S2MU106_AV_VBUS_SHIFT)
#define S2MU106_CARKIT_TYPE_MASK		(MASK_2b << S2MU106_CARKIT_TYPE_SHIFT)
#define S2MU106_VBUS_R255_MASK			(0x1 << S2MU106_VBUS_R255_SHIFT)
#define S2MU106_MHDL_MASK			(0x1 << S2MU106_MHDL_SHIFT)

/* S2MU106 MUIC CHG_TYP Register (0x4D) */
#define S2MU106_CHG_TYP_VBUS_R255_SHIFT		7
#define S2MU106_CHG_TYP_DP_3V_SDP_SHIFT		5
#define S2MU106_CHG_TYP_U200_SHIFT		4
#define S2MU106_CHG_TYP_SDP_1P8S_SHIFT		3
#define S2MU106_CHG_TYP_USB_SHIFT		2
#define S2MU106_CHG_TYP_CDPCHG_SHIFT		1
#define S2MU106_CHG_TYP_DCPCHG_SHIFT		0

#define S2MU106_CHG_TYP_VBUS_R255_MASK		(0x1 << S2MU106_CHG_TYP_VBUS_R255_SHIFT)
#define S2MU106_CHG_TYP_DP_3V_SDP_MASK		(0x1 << S2MU106_CHG_TYP_DP_3V_SDP_SHIFT)
#define S2MU106_CHG_TYP_U200_MASK		(0x1 << S2MU106_CHG_TYP_U200_SHIFT)
#define S2MU106_CHG_TYP_SDP_1P8S_MASK		(0x1 << S2MU106_CHG_TYP_SDP_1P8S_SHIFT)
#define S2MU106_CHG_TYP_USB_MASK		(0x1 << S2MU106_CHG_TYP_USB_SHIFT)
#define S2MU106_CHG_TYP_CDPCHG_MASK		(0x1 << S2MU106_CHG_TYP_CDPCHG_SHIFT)
#define S2MU106_CHG_TYP_DCPCHG_MASK		(0x1 << S2MU106_CHG_TYP_DCPCHG_SHIFT)
#define S2MU106_DEV_TYPE_CHG_TYPE		(S2MU106_CHG_TYP_VBUS_R255_MASK | S2MU106_CHG_TYP_U200_MASK | S2MU106_CHG_TYP_SDP_1P8S_MASK)

/* S2MU106 MUIC DEVICE_APPLE Register (0x4E) */
#define S2MU106_APPLE0P5A_CHG_SHIFT		7
#define S2MU106_APPLE1A_CHG_SHIFT		6
#define S2MU106_APPLE2A_CHG_SHIFT		5
#define S2MU106_APPLE2P4A_CHG_SHIFT		4
#define S2MU106_SDP_DCD_OUT_SHIFT		3
#define S2MU106_RID_WAKEUP_SHIFT		2
#define S2MU106_VBUS_WAKEUP_SHIFT		1
#define S2MU106_BCV1P2_OR_OPEN_SHIFT		0

#define S2MU106_APPLE0P5A_CHG_MASK		(0x1 << S2MU106_APPLE0P5A_CHG_SHIFT)
#define S2MU106_APPLE1A_CHG_MASK		(0x1 << S2MU106_APPLE1A_CHG_SHIFT)
#define S2MU106_APPLE2A_CHG_MASK		(0x1 << S2MU106_APPLE2A_CHG_SHIFT)
#define S2MU106_APPLE2P4A_CHG_MASK		(0x1 << S2MU106_APPLE2P4A_CHG_SHIFT)
#define S2MU106_SDP_DCD_OUT_MASK		(0x1 << S2MU106_SDP_DCD_OUT_SHIFT)
#define S2MU106_RID_WAKEUP_MASK			(0x1 << S2MU106_RID_WAKEUP_SHIFT)
#define S2MU106_VBUS_WAKEUP_MASK		(0x1 << S2MU106_VBUS_WAKEUP_SHIFT)
#define S2MU106_BCV1P2_OR_OPEN_MASK		(0x1 << S2MU106_BCV1P2_OR_OPEN_SHIFT)

/* S2MU106 MUIC BCD_RESCAN Register (0x4F) */
#define S2MU106_BCD_RESCAN_SHIFT		0

#define S2MU106_BCD_RESCAN_MASK			(0x1 << S2MU106_BCD_RESCAN_SHIFT)

/* S2MU106 MUIC AFC_OTP3 Register (0x68) */
#define S2MU106_COMP_REF_SEL_SHIFT		5
#define S2MU106_HCOMP_REF_SEL_SHIFT		0

#define S2MU106_COMP_REF_SEL_MASK               (0x7 << S2MU106_COMP_REF_SEL_SHIFT)
#define S2MU106_COMP_REF_SEL_0p3V_MASK          (0x4 << S2MU106_COMP_REF_SEL_SHIFT)
#define S2MU106_COMP_REF_SEL_0p4V_MASK          (0x2 << S2MU106_COMP_REF_SEL_SHIFT)
#define S2MU106_HCOMP_REF_SEL_MASK              (0x1f << S2MU106_HCOMP_REF_SEL_SHIFT)
#define S2MU106_HCOMP_REF_SEL_1p2V_MASK         (0x8 << S2MU106_HCOMP_REF_SEL_SHIFT)

/* S2MU106 MUIC MUIC_CTRL1 Register (0x6D) */
#define S2MU106_TX_DPDM_SHORT_SHIFT		7
#define S2MU106_TX_DP_RDN_SHIFT			6
#define S2MU106_TX_DM_RDN_SHIFT			5
#define S2MU106_SWITCH_OPEN_SHIFT		4
#define S2MU106_RAW_DATA_SHIFT			3
#define S2MU106_MANUAL_SW_SHIFT			2
#define S2MU106_WAIT_SHIFT			1
#define S2MU106_INT_MASK_SHIFT			0

#define S2MU106_TX_DPDM_SHORT_MASK		(0x1 << S2MU106_TX_DPDM_SHORT_SHIFT)
#define S2MU106_TX_DP_RDN_MASK 			(0x1 << S2MU106_TX_DP_RDN_SHIFT)
#define S2MU106_TX_DM_RDN_MASK 			(0x1 << S2MU106_TX_DM_RDN_SHIFT)
#define S2MU106_SWITCH_OPEN_MASK 		(0x1 << S2MU106_SWITCH_OPEN_SHIFT)
#define S2MU106_RAW_DATA_MASK			(0x1 << S2MU106_RAW_DATA_SHIFT)
#define S2MU106_MANUAL_SW_MASK 			(0x1 << S2MU106_MANUAL_SW_SHIFT)
#define S2MU106_WAIT_MASK 			(0x1 << S2MU106_WAIT_SHIFT)
#define S2MU106_INT_MASK_MASK 			(0x1 << S2MU106_INT_MASK_SHIFT)

/* S2MU106 MUIC TIMER_SET1 Register (0x6E) */
#define S2MU106_KEY_PRESS_3_SHIFT		7
#define S2MU106_KEY_PRESS_2_SHIFT 		6
#define S2MU106_KEY_PRESS_1_SHIFT		5
#define S2MU106_KEY_PRESS_0_SHIFT 		4
#define S2MU106_VBUS_RISE_DEB_SEL_SHIFT 	3
#define S2MU106_VBUS_FALL_DEB_SEL_SHIFT 	2
#define S2MU106_CLK_DIV2_SHIFT 			1
#define S2MU106_EOC2x_SHIFT 			0

#define S2MU106_KEY_PRESS_3_MASK 		(0x1 << S2MU106_KEY_PRESS_3_SHIFT)
#define S2MU106_KEY_PRESS_2_MASK 		(0x1 << S2MU106_KEY_PRESS_2_SHIFT)
#define S2MU106_KEY_PRESS_1_MASK 		(0x1 << S2MU106_KEY_PRESS_1_SHIFT)
#define S2MU106_KEY_PRESS_0_MASK 		(0x1 << S2MU106_KEY_PRESS_0_SHIFT)
#define S2MU106_VBUS_RISE_DEB_SEL_MASK		(0x1 << S2MU106_VBUS_RISE_DEB_SEL_SHIFT)
#define S2MU106_VBUS_FALL_DEB_SEL_MASK		(0x1 << S2MU106_VBUS_FALL_DEB_SEL_SHIFT)
#define S2MU106_CLK_DIV2_MASK			(0x1 << S2MU106_CLK_DIV2_SHIFT)
#define S2MU106_EOC2x_MASK 			(0x1 << S2MU106_EOC2x_SHIFT)

/* S2MU106 MUIC TIMER_SET2 Register (0x6F) */
#define S2MU106_SWITCHING_WAIT_3_SHIFT		7
#define S2MU106_SWITCHING_WAIT_2_SHIFT		6
#define S2MU106_SWITCHING_WAIT_1_SHIFT  	5
#define S2MU106_SWITCHING_WAIT_0_SHIFT		4
#define S2MU106_LONG_KEY_PRESS_3_SHIFT		3
#define S2MU106_LONG_KEY_PRESS_2_SHIFT		2
#define S2MU106_LONG_KEY_PRESS_1_SHIFT		1
#define S2MU106_LONG_KEY_PRESS_0_SHIFT  	0

#define S2MU106_SWITCHING_WAIT_3_MASK		(0x1 << S2MU106_SWITCHING_WAIT_3_SHIFT)
#define S2MU106_SWITCHING_WAIT_2_MASK		(0x1 << S2MU106_SWITCHING_WAIT_2_SHIFT)
#define S2MU106_SWITCHING_WAIT_1_MASK		(0x1 << S2MU106_SWITCHING_WAIT_1_SHIFT)
#define S2MU106_SWITCHING_WAIT_0_MASK		(0x1 << S2MU106_SWITCHING_WAIT_0_SHIFT)
#define S2MU106_LONG_KEY_PRESS_3_MASK		(0x1 << S2MU106_LONG_KEY_PRESS_3_SHIFT)
#define S2MU106_LONG_KEY_PRESS_2_MASK   	(0x1 << S2MU106_LONG_KEY_PRESS_2_SHIFT)
#define S2MU106_LONG_KEY_PRESS_1_MASK   	(0x1 << S2MU106_LONG_KEY_PRESS_1_SHIFT)
#define S2MU106_LONG_KEY_PRESS_0_MASK   	(0x1 << S2MU106_LONG_KEY_PRESS_0_SHIFT)

  /* S2MU106 MUIC MANUAL_SW_CTRL Register (0x70) */
#define S2MU106_DM_SWITCHING_SHIFT		5
#define S2MU106_DP_SWITCHING_SHIFT		2
#define S2MU106_JIG_SHIFT 			0

#define S2MU106_DM_SWITCHING_MASK		(MASK_3b << S2MU106_DM_SWITCHING_SHIFT)
#define S2MU106_DP_SWITCHING_MASK		(MASK_3b << S2MU106_DP_SWITCHING_SHIFT)
#define S2MU106_JIG_MASK 			(0x1 << S2MU106_JIG_SHIFT)
  /*
   * Manual Switch Control
   * D- [7:5] / D+ [4:2]
   * 000: Open all / 001: USB / 010: AUDIO / 011: UART / 100: V_AUDIO
   * rsvd[1] / JIG[0]
   * 00: Vbus to Open / 01: Vbus to Charger / 10: Vbus to MIC / 11: Vbus to VBout
   */
#define S2MU106_MANSW_OPEN		0
#define S2MU106_MANSW_USB		1
#define S2MU106_MANSW_UART1		2
#define S2MU106_MANSW_UART2		3

#define S2MU106_MANSW_OPEN_MASK		(S2MU106_MANSW_OPEN << S2MU106_DM_SWITCHING_SHIFT | S2MU106_MANSW_OPEN << S2MU106_DP_SWITCHING_SHIFT)
#define S2MU106_MANSW_USB_MASK		(S2MU106_MANSW_USB << S2MU106_DM_SWITCHING_SHIFT |S2MU106_MANSW_USB << S2MU106_DP_SWITCHING_SHIFT)
#define S2MU106_MANSW_UART1_MASK	(S2MU106_MANSW_UART1 << S2MU106_DM_SWITCHING_SHIFT | S2MU106_MANSW_UART1 << S2MU106_DP_SWITCHING_SHIFT)
#define S2MU106_MANSW_UART2_MASK	(S2MU106_MANSW_UART2 << S2MU106_DM_SWITCHING_SHIFT | S2MU106_MANSW_UART2 << S2MU106_DP_SWITCHING_SHIFT)

/* S2MU106 MUIC TIMER_SET3 Register (0x71) */
#define S2MU106_JIG_WAIT_TIME_2_SHIFT	7
#define S2MU106_JIG_WAIT_TIME_1_SHIFT	6
#define S2MU106_JIG_WAIT_TIME_0_SHIFT	5
#define S2MU106_ADC_PERIOD_1_SHIFT	4
#define S2MU106_ADC_PERIOD_0_SHIFT 	3
#define S2MU106_DCDTMRSET_2_SHIFT 	2
#define S2MU106_DCDTMRSET_1_SHIFT 	1
#define S2MU106_DCDTMRSET_0_SHIFT 	0
#define S2MU106_DCDTMRSET_SHIFT 	0

#define S2MU106_JIG_WAIT_TIME_2_MASK 	(0x1 << S2MU106_JIG_WAIT_TIME_2_SHIFT)
#define S2MU106_JIG_WAIT_TIME_1_MASK 	(0x1 << S2MU106_JIG_WAIT_TIME_1_SHIFT)
#define S2MU106_JIG_WAIT_TIME_0_MASK 	(0x1 << S2MU106_JIG_WAIT_TIME_0_SHIFT)
#define S2MU106_ADC_PERIOD_1_MASK 	(0x1 << S2MU106_ADC_PERIOD_1_SHIFT)
#define S2MU106_ADC_PERIOD_0_MASK 	(0x1 << S2MU106_ADC_PERIOD_0_SHIFT)
#define S2MU106_DCDTMRSET_2_MASK 	(0x1 << S2MU106_DCDTMRSET_2_SHIFT)
#define S2MU106_DCDTMRSET_1_MASK 	(0x1 << S2MU106_DCDTMRSET_1_SHIFT)
#define S2MU106_DCDTMRSET_0_MASK 	(0x1 << S2MU106_DCDTMRSET_0_SHIFT)
#define S2MU106_DCDTMRSET_MASK 		(0x7 << S2MU106_DCDTMRSET_0_SHIFT)
#define S2MU106_DCDTMRSET_600MS_MASK 	(0x4 << S2MU106_DCDTMRSET_SHIFT)

/* S2MU106 MUIC MUIC_CTRL2 Register (0x72) */
#define S2MU106_WAKEUP_LOOP_SEL_SHIFT	7
#define S2MU106_ADCEN_CNTR_2_SHIFT 	6
#define S2MU106_ADCEN_CNTR_1_SHIFT 	5
#define S2MU106_ADCEN_CNTR_0_SHIFT 	4
#define S2MU106_DCDTMR_OUT_EN_SHIFT 	3
#define S2MU106_USB_2ND_EN_SHIFT 	2
#define S2MU106_ADC_OFF_SHIFT 		1
#define S2MU106_CPEN_SHIFT 		0

#define S2MU106_WAKEUP_LOOP_SEL_MASK	(0x1 << S2MU106_WAKEUP_LOOP_SEL_SHIFT)
#define S2MU106_ADCEN_CNTR_2_MASK 	(0x1 << S2MU106_ADCEN_CNTR_2_SHIFT)
#define S2MU106_ADCEN_CNTR_1_MASK 	(0x1 << S2MU106_ADCEN_CNTR_1_SHIFT)
#define S2MU106_ADCEN_CNTR_0_MASK 	(0x1 << S2MU106_ADCEN_CNTR_0_SHIFT)
#define S2MU106_DCDTMR_OUT_EN_MASK 	(0x1 << S2MU106_DCDTMR_OUT_EN_SHIFT)
#define S2MU106_USB_2ND_EN_MASK 	(0x1 << S2MU106_USB_2ND_EN_SHIFT)
#define S2MU106_ADC_OFF_MASK 		(0x1 << S2MU106_ADC_OFF_SHIFT)
#define S2MU106_CPEN_MASK 		(0x1 << S2MU106_CPEN_SHIFT)

/* S2MU106 MUIC MUIC_CTRL3 Register (0x73) */
#define S2MU106_ADC_DECISION_PERI_1_SHIFT		7
#define S2MU106_ADC_DECISION_PERI_0_SHIFT 		6
#define S2MU106_ADC_DECISION_ONE_1_SHIFT 		5
#define S2MU106_ADC_DECISION_ONE_0_SHIFT 		4
#define S2MU106_Auto_rescan_SHIFT 			3
#define S2MU106_ONE_SHOT_SHIFT				2
#define S2MU106_DEBOUNCE_SEL_SHIFT 			1
#define S2MU106_LOWPWR_SHIFT 				0

#define S2MU106_ADC_DECISION_PERI_1_MASK		(0x1 << S2MU106_ADC_DECISION_PERI_1_SHIFT)
#define S2MU106_ADC_DECISION_PERI_0_MASK 		(0x1 << S2MU106_ADC_DECISION_PERI_0_SHIFT)
#define S2MU106_ADC_DECISION_ONE_1_MASK 		(0x1 << S2MU106_ADC_DECISION_ONE_1_SHIFT)
#define S2MU106_ADC_DECISION_ONE_0_MASK 		(0x1 << S2MU106_ADC_DECISION_ONE_0_SHIFT)
#define S2MU106_Auto_rescan_MASK 			(0x1 << S2MU106_Auto_rescan_SHIFT)
#define S2MU106_ONE_SHOT_MASK 				(0x1 << S2MU106_ONE_SHOT_SHIFT)
#define S2MU106_DEBOUNCE_SEL_MASK 			(0x1 << S2MU106_DEBOUNCE_SEL_SHIFT)
#define S2MU106_LOWPWR_MASK 				(0x1 << S2MU106_LOWPWR_SHIFT)

/* S2MU106 MUIC CHARGER_DET_OTP Register (0x74) */
#define S2MU106_MAN_VBUSTMR_ON_SHIFT		7
#define S2MU106_VTH_APPLE_2_SHIFT		6
#define S2MU106_VTH_APPLE_1_SHIFT		5
#define S2MU106_VTH_APPLE_0_SHIFT 		4
#define S2MU106_VTRIM_DATA_4_SHIFT 		3
#define S2MU106_VTRIM_DATA_3_SHIFT 		2
#define S2MU106_VTRIM_DATA_2_SHIFT 		1
#define S2MU106_VTRIM_DATA_1_SHIFT 		0

#define S2MU106_MAN_VBUSTMR_ON_MASK		(0x1 << S2MU106_MAN_VBUSTMR_ON_SHIFT)
#define S2MU106_VTH_APPLE_2_MASK 		(0x1 << S2MU106_VTH_APPLE_2_SHIFT)
#define S2MU106_VTH_APPLE_1_MASK 		(0x1 << S2MU106_VTH_APPLE_1_SHIFT)
#define S2MU106_VTH_APPLE_0_MASK 		(0x1 << S2MU106_VTH_APPLE_0_SHIFT)
#define S2MU106_VTRIM_DATA_4_MASK 		(0x1 << S2MU106_VTRIM_DATA_4_SHIFT)
#define S2MU106_VTRIM_DATA_3_MASK 		(0x1 << S2MU106_VTRIM_DATA_3_SHIFT)
#define S2MU106_VTRIM_DATA_2_MASK 		(0x1 << S2MU106_VTRIM_DATA_2_SHIFT)
#define S2MU106_VTRIM_DATA_1_MASK		(0x1 << S2MU106_VTRIM_DATA_1_SHIFT)

/* S2MU106 MUIC ADC_VREF_OTP Register (0x75) */
#define S2MU106_ADC_VREF_TRIM_7_SHIFT		7
#define S2MU106_ADC_VREF_TRIM_6_SHIFT 		6
#define S2MU106_ADC_VREF_TRIM_5_SHIFT 		5
#define S2MU106_ADC_VREF_TRIM_4_SHIFT 		4
#define S2MU106_ADC_VREF_TRIM_3_SHIFT 		3
#define S2MU106_ADC_VREF_TRIM_2_SHIFT		2
#define S2MU106_ADC_VREF_TRIM_1_SHIFT 		1
#define S2MU106_ADC_VREF_TRIM_0_SHIFT 		0

#define S2MU106_ADC_VREF_TRIM_7_MASK		(0x1 << S2MU106_ADC_VREF_TRIM_7_SHIFT)
#define S2MU106_ADC_VREF_TRIM_6_MASK		(0x1 << S2MU106_ADC_VREF_TRIM_6_SHIFT)
#define S2MU106_ADC_VREF_TRIM_5_MASK		(0x1 << S2MU106_ADC_VREF_TRIM_5_SHIFT)
#define S2MU106_ADC_VREF_TRIM_4_MASK		(0x1 << S2MU106_ADC_VREF_TRIM_4_SHIFT)
#define S2MU106_ADC_VREF_TRIM_3_MASK		(0x1 << S2MU106_ADC_VREF_TRIM_3_SHIFT)
#define S2MU106_ADC_VREF_TRIM_2_MASK		(0x1 << S2MU106_ADC_VREF_TRIM_2_SHIFT)
#define S2MU106_ADC_VREF_TRIM_1_MASK		(0x1 << S2MU106_ADC_VREF_TRIM_1_SHIFT)
#define S2MU106_ADC_VREF_TRIM_0_MASK		(0x1 << S2MU106_ADC_VREF_TRIM_0_SHIFT)

/* S2MU106 MUIC ADCBIAS_OTP1 Register (0x76) */
#define S2MU106_WAKEUP_LOW_VTH_SEL_SHIFT	7
#define S2MU106_TRM_RID2U_2ND_6_SHIFT 		6
#define S2MU106_TRM_RID2U_2ND_5_SHIFT 		5
#define S2MU106_TRM_RID2U_2ND_4_SHIFT 		4
#define S2MU106_TRM_RID2U_2ND_3_SHIFT 		3
#define S2MU106_TRM_RID2U_2ND_2_SHIFT 		2
#define S2MU106_TRM_RID2U_2ND_1_SHIFT 		1
#define S2MU106_TRM_RID2U_2ND_0_SHIFT 		0

#define S2MU106_WAKEUP_LOW_VTH_SEL_MASK 	(0x1 << S2MU106_WAKEUP_LOW_VTH_SEL_SHIFT)
#define S2MU106_TRM_RID2U_2ND_6_MASK 		(0x1 << S2MU106_TRM_RID2U_2ND_6_SHIFT)
#define S2MU106_TRM_RID2U_2ND_5_MASK 		(0x1 << S2MU106_TRM_RID2U_2ND_5_SHIFT)
#define S2MU106_TRM_RID2U_2ND_4_MASK 		(0x1 << S2MU106_TRM_RID2U_2ND_4_SHIFT)
#define S2MU106_TRM_RID2U_2ND_3_MASK 		(0x1 << S2MU106_TRM_RID2U_2ND_3_SHIFT)
#define S2MU106_TRM_RID2U_2ND_2_MASK 		(0x1 << S2MU106_TRM_RID2U_2ND_2_SHIFT)
#define S2MU106_TRM_RID2U_2ND_1_MASK 		(0x1 << S2MU106_TRM_RID2U_2ND_1_SHIFT)
#define S2MU106_TRM_RID2U_2ND_0_MASK 		(0x1 << S2MU106_TRM_RID2U_2ND_0_SHIFT)

/* S2MU106 MUIC ADCBIAS_OTP2 Register (0x77) */
#define S2MU106_RID_PUP_RES_SEL1_SHIFT 		7
#define S2MU106_TRM_RID11U_2ND_6_SHIFT		6
#define S2MU106_TRM_RID11U_2ND_5_SHIFT		5
#define S2MU106_TRM_RID11U_2ND_4_SHIFT		4
#define S2MU106_TRM_RID11U_2ND_3_SHIFT		3
#define S2MU106_TRM_RID11U_2ND_2_SHIFT		2
#define S2MU106_TRM_RID11U_2ND_1_SHIFT		1
#define S2MU106_TRM_RID11U_2ND_0_SHIFT		0

#define S2MU106_RID_PUP_RES_SEL1_MASK 		(0x1 << S2MU106_RID_PUP_RES_SEL1_SHIFT)
#define S2MU106_TRM_RID11U_2ND_6_MASK		(0x1 << S2MU106_TRM_RID11U_2ND_6_SHIFT)
#define S2MU106_TRM_RID11U_2ND_5_MASK 		(0x1 << S2MU106_TRM_RID11U_2ND_5_SHIFT)
#define S2MU106_TRM_RID11U_2ND_4_MASK 		(0x1 << S2MU106_TRM_RID11U_2ND_4_SHIFT)
#define S2MU106_TRM_RID11U_2ND_3_MASK 		(0x1 << S2MU106_TRM_RID11U_2ND_3_SHIFT)
#define S2MU106_TRM_RID11U_2ND_2_MASK 		(0x1 << S2MU106_TRM_RID11U_2ND_2_SHIFT)
#define S2MU106_TRM_RID11U_2ND_1_MASK 		(0x1 << S2MU106_TRM_RID11U_2ND_1_SHIFT)
#define S2MU106_TRM_RID11U_2ND_0_MASK 		(0x1 << S2MU106_TRM_RID11U_2ND_0_SHIFT)

/* S2MU106 MUIC ADCBIAS_OTP3 Register (0x78) */
#define S2MU106_RID_PUP_RES_SEL0_SHIFT		7
#define S2MU106_TRM_RID64U_2ND_6_SHIFT		6
#define S2MU106_TRM_RID64U_2ND_5_SHIFT		5
#define S2MU106_TRM_RID64U_2ND_4_SHIFT		4
#define S2MU106_TRM_RID64U_2ND_3_SHIFT		3
#define S2MU106_TRM_RID64U_2ND_2_SHIFT	 	2
#define S2MU106_TRM_RID64U_2ND_1_SHIFT		1
#define S2MU106_TRM_RID64U_2ND_0_SHIFT		0

#define S2MU106_RID_PUP_RES_SEL0_MASK 		(0x1 << S2MU106_RID_PUP_RES_SEL0_SHIFT)
#define S2MU106_TRM_RID64U_2ND_6_MASK		(0x1 << S2MU106_TRM_RID64U_2ND_6_SHIFT)
#define S2MU106_TRM_RID64U_2ND_5_MASK 		(0x1 << S2MU106_TRM_RID64U_2ND_5_SHIFT)
#define S2MU106_TRM_RID64U_2ND_4_MASK 		(0x1 << S2MU106_TRM_RID64U_2ND_4_SHIFT)
#define S2MU106_TRM_RID64U_2ND_3_MASK 		(0x1 << S2MU106_TRM_RID64U_2ND_3_SHIFT)
#define S2MU106_TRM_RID64U_2ND_2_MASK 		(0x1 << S2MU106_TRM_RID64U_2ND_2_SHIFT)
#define S2MU106_TRM_RID64U_2ND_1_MASK 		(0x1 << S2MU106_TRM_RID64U_2ND_1_SHIFT)
#define S2MU106_TRM_RID64U_2ND_0_MASK 		(0x1 << S2MU106_TRM_RID64U_2ND_0_SHIFT)

/* S2MU106 MUIC ADCBIAS_OTP4 Register (0x79) */
#define S2MU106_ADC_STDBY_BIAS_SEL_SHIFT   	7
#define S2MU106_TRM_RID260U_2ND_6_SHIFT 	6
#define S2MU106_TRM_RID260U_2ND_5_SHIFT 	5
#define S2MU106_TRM_RID260U_2ND_4_SHIFT 	4
#define S2MU106_TRM_RID260U_2ND_3_SHIFT 	3
#define S2MU106_TRM_RID260U_2ND_2_SHIFT		2
#define S2MU106_TRM_RID260U_2ND_1_SHIFT 	1
#define S2MU106_TRM_RID260U_2ND_0_SHIFT		0

#define S2MU106_ADC_STDBY_BIAS_SEL_MASK		(0x1 << S2MU106_ADC_STDBY_BIAS_SEL_SHIFT)
#define S2MU106_TRM_RID260U_2ND_6_MASK		(0x1 << S2MU106_TRM_RID260U_2ND_6_SHIFT)
#define S2MU106_TRM_RID260U_2ND_5_MASK		(0x1 << S2MU106_TRM_RID260U_2ND_5_SHIFT)
#define S2MU106_TRM_RID260U_2ND_4_MASK		(0x1 << S2MU106_TRM_RID260U_2ND_4_SHIFT)
#define S2MU106_TRM_RID260U_2ND_3_MASK		(0x1 << S2MU106_TRM_RID260U_2ND_3_SHIFT)
#define S2MU106_TRM_RID260U_2ND_2_MASK     	(0x1 << S2MU106_TRM_RID260U_2ND_2_SHIFT)
#define S2MU106_TRM_RID260U_2ND_1_MASK		(0x1 << S2MU106_TRM_RID260U_2ND_1_SHIFT)
#define S2MU106_TRM_RID260U_2ND_0_MASK		(0x1 << S2MU106_TRM_RID260U_2ND_0_SHIFT)

/* S2MU106 MUIC LDOADC_VSETL Register (0x7A) */
#define S2MU106_UART_SEL_SHIFT 			7
#define S2MU106_MUIC_CLK_O_SHIFT 		6
#define S2MU106_CHG_TYPE_DET_ALWAYS_ONB_SHIFT	5
#define S2MU106_LDOADC_VSETL_4_SHIFT 		4
#define S2MU106_LDOADC_VSETL_3_SHIFT 		3
#define S2MU106_LDOADC_VSETL_2_SHIFT 		2
#define S2MU106_LDOADC_VSETL_1_SHIFT 		1
#define S2MU106_LDOADC_VSETL_0_SHIFT 		0

#define S2MU106_UART_SEL_MASK			(0x1 <<S2MU106_UART_SEL_SHIFT)
#define S2MU106_MUIC_CLK_O_MASK 		(0x1 << S2MU106_MUIC_CLK_O_SHIFT)
#define S2MU106_CHG_TYPE_DET_ALWAYS_ONB_MASK	(0x1 << S2MU106_CHG_TYPE_DET_ALWAYS_ONB_SHIFT)
#define S2MU106_LDOADC_VSETL_4_MASK 		(0x1 << S2MU106_LDOADC_VSETL_4_SHIFT)
#define S2MU106_LDOADC_VSETL_3_MASK		(0x1 << S2MU106_LDOADC_VSETL_3_SHIFT)
#define S2MU106_LDOADC_VSETL_2_MASK 		(0x1 << S2MU106_LDOADC_VSETL_2_SHIFT)
#define S2MU106_LDOADC_VSETL_1_MASK 		(0x1 << S2MU106_LDOADC_VSETL_1_SHIFT)
#define S2MU106_LDOADC_VSETL_0_MASK 		(0x1 << S2MU106_LDOADC_VSETL_0_SHIFT)

/* S2MU106 MUIC LDOADC_VSETH Register (0x7B) */
#define S2MU106_WAKEUP_DLY_SHIFT 		7
#define S2MU106_WAKE_HYS_SHIFT 			6
#define S2MU106_MANUAL_JIGB_RID_SHIFT		5
#define S2MU106_LDOADC_VSETH_SHIFT 		0

#define S2MU106_WAKEUP_DLY_MASK 		(0x1 << S2MU106_WAKEUP_DLY_SHIFT)
#define S2MU106_WAKE_HYS_MASK 			(0x1 << S2MU106_WAKE_HYS_SHIFT)
#define S2MU106_MANUAL_JIGB_RID_MASK		(0x1 << S2MU106_MANUAL_JIGB_RID_SHIFT)
#define S2MU106_LDOADC_VSETH_MASK 		(0x1F << S2MU106_LDOADC_VSETH_SHIFT)

/* S2MU106 MUIC LDOPCP_VSET_OTP Register (0x7C) */
#define S2MU106_LDOPCP_USB_SET_3_SHIFT 			7
#define S2MU106_LDOPCP_USB_SET_2_SHIFT 			6
#define S2MU106_LDOPCP_USB_SET_1_SHIFT 			5
#define S2MU106_LDOPCP_USB_SET_0_SHIFT 			4
#define S2MU106_JIGB_DLY_AB_SEL_SHIFT 			3
#define S2MU106_VBUS_DET_TMR_MASK_CTRL_SHIFT		2
#define S2MU106_DETACH_TIME_SET_SHIFT 			0

#define S2MU106_LDOPCP_USB_SET_3_MASK 			(0x1 << S2MU106_LDOPCP_USB_SET_3_SHIFT)
#define S2MU106_LDOPCP_USB_SET_2_MASK 			(0x1 << S2MU106_LDOPCP_USB_SET_2_SHIFT)
#define S2MU106_LDOPCP_USB_SET_1_MASK 			(0x1 << S2MU106_LDOPCP_USB_SET_1_SHIFT)
#define S2MU106_LDOPCP_USB_SET_0_MASK 			(0x1 << S2MU106_LDOPCP_USB_SET_0_SHIFT)
#define S2MU106_JIGB_DLY_AB_SEL_MASK 			(0x1 << S2MU106_JIGB_DLY_AB_SEL_SHIFT)
#define S2MU106_VBUS_DET_TMR_MASK_CTRL_MASK		(0x1 << S2MU106_VBUS_DET_TMR_MASK_CTRL_SHIFT)
#define S2MU106_DETACH_TIME_SET_MASK 			(0x3 << S2MU106_DETACH_TIME_SET_SHIFT)

/* S2MU106 MUIC MONITOR_SEL Register (0x7D) */
#define S2MU106_MONITOR_SEL_SHIFT		7

#define S2MU106_MONITOR_SEL_MASK		(0x1 << S2MU106_MONITOR_SEL_SHIFT)

/* S2MU106 MUIC RID_WATER_PROOF Register (0x7E) */
#define S2MU106_ADC_STD_BIAS_CTRL_3_SHIFT	7
#define S2MU106_ADC_STD_BIAS_CTRL_2_SHIFT 	6
#define S2MU106_ADC_STD_BIAS_CTRL_1_SHIFT 	5
#define S2MU106_ADC_STD_BIAS_CTRL_0_SHIFT 	4
#define S2MU106_DETACH_VALID_TSET_1_SHIFT 	2
#define S2MU106_DETACH_VALID_TSET_0_SHIFT 	1
#define S2MU106_WATER_WARN_SEL_SHIFT 		0

#define S2MU106_ADC_STD_BIAS_CTRL_3_MASK	(0x1 << S2MU106_ADC_STD_BIAS_CTRL_3_SHIFT)
#define S2MU106_ADC_STD_BIAS_CTRL_2_MASK 	(0x1 << S2MU106_ADC_STD_BIAS_CTRL_2_SHIFT)
#define S2MU106_ADC_STD_BIAS_CTRL_1_MASK 	(0x1 << S2MU106_ADC_STD_BIAS_CTRL_1_SHIFT)
#define S2MU106_ADC_STD_BIAS_CTRL_0_MASK 	(0x1 << S2MU106_ADC_STD_BIAS_CTRL_0_SHIFT)
#define S2MU106_DETACH_VALID_TSET_1_MASK 	(0x1 << S2MU106_DETACH_VALID_TSET_1_SHIFT)
#define S2MU106_DETACH_VALID_TSET_0_MASK 	(0x1 << S2MU106_DETACH_VALID_TSET_0_SHIFT)
#define S2MU106_WATER_WARN_SEL_MASK 		(0x1 << S2MU106_WATER_WARN_SEL_SHIFT)

  /* S2MU106 MUIC RID_DISCHARGE Register (0x7F) */
#define S2MU106_DCD_DAATTACH_OPTION_BACKUP_SHIFT	7
#define S2MU106_CHG_DET_OFF_SHIFT			6
#define S2MU106_USBKILL_OTG_OPTION_SHIFT 		5
#define S2MU106_RID_DISCHG_MAN_OFF_WC_SHIFT 		4
#define S2MU106_RID_DISCHG_MAN_ON_SHIFT 		3
#define S2MU106_RID_DISCHARGE_ON_SHIFT 			2
#define S2MU106_RID_DISCHG_TIME_SHIFT 			0

#define S2MU106_DCD_DAATTACH_OPTION_BACKUP_MASK		(0x1 << S2MU106_DCD_DAATTACH_OPTION_BACKUP_SHIFT)
#define S2MU106_CHG_DET_OFF_MASK 			(0x1 << S2MU106_CHG_DET_OFF_SHIFT)
#define S2MU106_USBKILL_OTG_OPTION_MASK 		(0x1 << S2MU106_USBKILL_OTG_OPTION_SHIFT)
#define S2MU106_RID_DISCHG_MAN_OFF_WC_MASK		(0x1 << S2MU106_RID_DISCHG_MAN_OFF_WC_SHIFT)
#define S2MU106_RID_DISCHG_MAN_ON_MASK 			(0x1 << S2MU106_RID_DISCHG_MAN_ON_SHIFT)
#define S2MU106_RID_DISCHARGE_ON_MASK 			(0x1 << S2MU106_RID_DISCHARGE_ON_SHIFT)
#define S2MU106_RID_DISCHG_TIME_MASK 			(0x3 << S2MU106_RID_DISCHG_TIME_SHIFT)

/* S2MU106 MUIC MUIC_RSVD1 Register (0x80) */


/* S2MU106 MUIC MUIC_RSVD2 Register (0x81) */


/* S2MU106 MUIC MUIC_RSVD3 Register (0x82) */


/* S2MU106 MUIC MUIC_RSVD4 Register (0x83) */
#define S2MU106_EN_NFB_SKIP_SHIFT			3
#define S2MU106_EN_OCP_TEST_MODE_HBST_SHIFT		2
#define S2MU106_EN_OCP_LV_DOWN_HBST_SHIFT		1
#define S2MU106_EN_NDLY_SKIP_HBST_SHIFT			0

#define S2MU106_EN_NFB_SKIP_MASK			(0x1 << S2MU106_EN_NFB_SKIP_SHIFT)
#define S2MU106_EN_OCP_TEST_MODE_HBST_MASK		(0x1 << S2MU106_EN_OCP_TEST_MODE_HBST_SHIFT)
#define S2MU106_EN_OCP_LV_DOWN_HBST_MASK		(0x1 << S2MU106_EN_OCP_LV_DOWN_HBST_SHIFT)
#define S2MU106_EN_NDLY_SKIP_HBST_MASK			(0x1 << S2MU106_EN_NDLY_SKIP_HBST_SHIFT)

/* S2MU106 MUIC MUIC_RSVD5 Register (0x84) */


/* S2MU106 MUIC MUIC_RSVD6 Register (0x85) */


/* S2MU106 MUIC MUIC_RSVD7 Register (0x86) */


/* S2MU106 MUIC MUIC_RSVD8 Register (0x87) */


/* S2MU106 MUIC ATE_OTP0 Register (0xFC) */


/* S2MU106 MUIC ATE_OTP1 Register (0xFD) */


/* S2MU106 MUIC ATE_OTP2 Register (0xFE) */


/* S2MU106 MUIC ATE_OTP3 Register (0xFF) */

/* S2MU106_REG_LDOADC_VSETH register */
#define LDOADC_VSETH_MASK	0x1F
#define LDOADC_VSETL_MASK	0x1F
#define LDOADC_VSET_3V		0x1F
#define LDOADC_VSET_2_7V	0x1C
#define LDOADC_VSET_2_6V	0x0E
#define LDOADC_VSET_2_4V	0x0C
#define LDOADC_VSET_2_2V	0x0A
#define LDOADC_VSET_2_0V	0x08
#define LDOADC_VSET_1_8V	0x06
#define LDOADC_VSET_1_7V	0x05
#define LDOADC_VSET_1_6V	0x04
#define LDOADC_VSET_1_5V	0x03
#define LDOADC_VSET_1_4V	0x02
#define LDOADC_VSET_1_2V	0x00
#define LDOADC_VSETH_WAKE_HYS_SHIFT	6
#define LDOADC_VSETH_WAKE_HYS_MASK	(0x1 << LDOADC_VSETH_WAKE_HYS_SHIFT)

enum s2mu106_muic_enable {
	S2MU106_DISABLE,
	S2MU106_ENABLE,
};

enum s2mu106_muic_adc_mode {
	S2MU106_ADC_ONESHOT,
	S2MU106_ADC_PERIODIC,
};

enum s2mu106_muic_detect_dev_read_val {
	DEVICE_TYPE1 = 0,
	DEVICE_TYPE2,
	DEVICE_TYPE3,
	ADC,
	DEVICE_APPLE,
	CHG_TYPE,
	SC_STATUS2,
	MAX_NUM,
};

typedef enum {
	S2MU106_MODE_NONE = -1,
	S2MU106_MODE_AUTO,
	S2MU106_MODE_MANUAL,
	S2MU106_MODE_MAX,
} t_mode_data ;

typedef enum {
	S2MU106_PATH_NONE = -1,
	S2MU106_PATH_OPEN,
	S2MU106_PATH_USB,
	S2MU106_PATH_UART_AP,
	S2MU106_PATH_UART_CP,
	S2MU106_PATH_RSVD,
	S2MU106_PATH_MAX,
} t_path_data;

typedef enum {
	S2MU106_WATER_MUIC_IDLE,
	S2MU106_WATER_MUIC_VERIFY,
	S2MU106_WATER_MUIC_DET,
	S2MU106_WATER_MUIC_CCIC_DET,
	S2MU106_WATER_MUIC_CCIC_STABLE,
	S2MU106_WATER_MUIC_CCIC_INVALID,
} t_water_status;

typedef enum {
	S2MU106_WATER_DRY_MUIC_IDLE,
	S2MU106_WATER_DRY_MUIC_DET,
	S2MU106_WATER_DRY_MUIC_CCIC_DET,
	S2MU106_WATER_DRY_MUIC_CCIC_INVALID,
} t_water_dry_status;

typedef enum {
	S2MU106_DETECT_NONE,
	S2MU106_DETECT_DONE,
	S2MU106_DETECT_SKIP,
} t_detect_status;

typedef enum {
	S2MU106_IRQ_CHECK_DONE,
	S2MU106_IRQ_SKIP,
} t_irq_status;

typedef enum {
	S2MU106_AFC_5V_to_9V,
	S2MU106_AFC_9V_to_5V,
} t_afc_vol_change;

/* muic chip specific internal data structure
 * that setted at muic-xxxx.c file
 */
struct s2mu106_muic_data {
	struct device *dev;
	struct i2c_client *i2c; /* i2c addr: 0x7C; MUIC */
	struct s2mu106_dev *s2mu106_dev;

	struct mutex muic_mutex;
	struct mutex switch_mutex;
#if defined(CONFIG_HV_MUIC_S2MU106_AFC)
	struct mutex afc_mutex;
#endif

	struct mutex bcd_rescan_mutex;
	struct wakeup_source *muic_ws;

	/* model dependant mfd platform data */
	struct s2mu106_platform_data *mfd_pdata;

	/* model dependant muic platform data */
	struct muic_platform_data *pdata;

	void *if_data;

	int irq_attach;
	int irq_detach;
	int irq_rid_chg;
	int irq_usb_killer;
	int irq_vbus_on;
	int irq_rsvd_attach;
	int irq_adc_change;
	int irq_av_charge;
	int irq_vbus_off;
#if defined(CONFIG_HV_MUIC_S2MU106_AFC)
	int irq_vdnmon;
	int irq_mpnack;
	int irq_mrxtrf;
	int irq_mrxrdy;
	struct power_supply *psy_pm;
	struct power_supply *psy_chg;
#endif
	bool afc_check;
#if defined(CONFIG_HV_MUIC_S2MU106_AFC)
	bool is_dp_drive;
	bool is_hvcharger_detected;
	bool is_requested_step_down;
#endif

	muic_attached_dev_t new_dev;

	int adc;
	int vbvolt;
	int vmid;
	int reg[MAX_NUM];
#if defined(CONFIG_HV_MUIC_S2MU106_AFC)
	int mrxrdy_cnt;
	int mping_cnt;
	int qc_retry_cnt;
	int tx_data;
	int qc_retry_wait_cnt;

	muic_hv_state_t hv_state;
#endif

	/*
	 * Distinguisher is needed,
	 * if it doesn't have the muic manager.
	 */
	int rescan_cnt;

	/* W/A waiting for the charger ic */
	struct delayed_work dcd_recheck;
#if defined(CONFIG_HV_MUIC_S2MU106_AFC)
	struct delayed_work reset_work;
	struct delayed_work mping_retry_work;
	struct delayed_work qc_retry_work;
#endif
	struct delayed_work rescan_validity_checker;
	bool is_timeout_attached;

#if IS_ENABLED(CONFIG_S2MU106_IFCONN_HOUSE_NOT_GND)
	bool is_rescanning;
#endif
	bool is_sido_vbus_switch;
	bool is_disable_afc;
	bool is_water_detected;
#if IS_ENABLED(CONFIG_HICCUP_CHARGER)
	bool is_hiccup_mode;
#endif
#if defined(CONFIG_MUIC_HV_SUPPORT_POGO_DOCK)
	/* Pogo dock gpio */
	int gpio_dock;
	int irq_dock;
#endif
};

extern unsigned int lpcharge;
extern struct muic_platform_data muic_pdata;

int s2mu106_i2c_read_byte(struct i2c_client *client, u8 command);
int s2mu106_i2c_write_byte(struct i2c_client *client, u8 command, u8 value);
int s2mu106_muic_recheck_adc(struct s2mu106_muic_data *muic_data);
void s2mu106_muic_control_vbus_det(struct s2mu106_muic_data *muic_data,
			bool enable);
extern void s2mu106_muic_dcd_rescan(struct s2mu106_muic_data *muic_data);
extern int s2mu106_muic_control_rid_adc(struct s2mu106_muic_data *muic_data,
				bool enable);
extern int s2mu106_muic_bcd_rescan(struct s2mu106_muic_data *muic_data);
extern void s2mu106_muic_charger_init(void);
int s2mu106_muic_jig_on(struct s2mu106_muic_data *muic_data);
void s2mu106_muic_control_vbus_det(struct s2mu106_muic_data *muic_data,
			bool enable);

int s2mu106_set_gpio_uart_sel(struct s2mu106_muic_data *muic_data,
			int uart_sel);
int s2mu106_init_interface(struct s2mu106_muic_data *muic_data,
			struct muic_interface_t *muic_if);
#if IS_ENABLED(CONFIG_CCIC_S2MU106)
int s2mu106_muic_refresh_adc(struct s2mu106_muic_data *muic_data);
#endif
#if IS_ENABLED(CONFIG_SEC_FACTORY)
int s2mu106_muic_set_otg_reg(struct s2mu106_muic_data *muic_data, bool on);
#else
int s2mu106_muic_get_otg_state(void);
#endif
#endif /* __S2MU106_MUIC_H__ */

